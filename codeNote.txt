
// Backend //////////////////////////////////////////////////////////////////////////////////////////
Một số lưu ý:
- TK quản trị:
    TK: admin 
    MK: admin123

- role của người dùng: 
    0: admin
    1: user

- .prettierrc đã được set up khi hoàn thành đoạn code nhớ alt + shift + F để clean code

***Lưu ý khi triễn khai API:
- Khi thực hiện hiễn thị trả về cần ghi rõ vị trí hàm bị và nội dung 
exp: 
    export const handleRegister = async (req, res) => {
        try {
            // some code
            return res.status(200).json({
                EM: "REGISTER | INFO | Register success", 
                EC: "200", // status
                DT: "", // data
            });
        } catch (error) {
            // FORDER | MODULE | TYPE | CONTENT
            console.log('SERVICE | REGISTER | ERROR | ', error); // dAev only

            return res.status(200).json({
                EM: "REGISTER | ERROR | " + error, // location and error
                EC: "400", // status
                DT: "", // data
            });
        }
    };

***Mã hoá dữ liệu khi gửi dữ liệu bằng giao thức POST
- Khi request data lên server bằng POST thì sữ dụng hàm "postData" thay vì gửi trực tiếp bằng axios
- Setup hàm trong controller và gọi hàm để sử dụng.

// Frontend //////////////////////////////////////////////////////////////////////////////////////////
***Quy tác sử dụng useReducer:
- Chỉ sử dụng khi state buộc phải truyền giữa 3 component trở lên hoặc để quản lý số lượng state lớn cùng lúc (5 state).
- Thiết lập reducer cần tác riêng và thiết lập:
    + Trong thư mục cha tạo thư mục <Tên component>Reducer (bao gồm action.js, reducer.js)
    + action.js bao gồm các action type và hàm action (để chuyển đổi dữ liệu của dispatch).
    + reducer.js bao gồm initstate và hàm reducer.
- Tham khảo reducer của trang Register
